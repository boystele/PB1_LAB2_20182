// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SGPA.Infrastructure.Data;

namespace SGPA.Infrastructure.Migrations
{
    [DbContext(typeof(SGPAContext))]
    partial class SGPAContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SGPA.ApplicationCore.Entity.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(30)");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            ClienteId = 1,
                            Descricao = "Robson",
                            Email = "Robsonrodrigues_12@hotmail.com"
                        },
                        new
                        {
                            ClienteId = 2,
                            Descricao = "Neemias",
                            Email = "NeemiasFernandes@hotmail.com"
                        });
                });

            modelBuilder.Entity("SGPA.ApplicationCore.Entity.Endereco", b =>
                {
                    b.Property<int>("EnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CEP")
                        .HasColumnType("varchar(8)");

                    b.Property<int>("ClienteId");

                    b.Property<string>("Logradouro")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Numero")
                        .HasColumnType("varchar(4)");

                    b.HasKey("EnderecoId");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("Enderecos");

                    b.HasData(
                        new
                        {
                            EnderecoId = 1,
                            Bairro = "Dr Fabio",
                            CEP = "55555555",
                            ClienteId = 1,
                            Logradouro = "Cuiaba",
                            Numero = "1896"
                        },
                        new
                        {
                            EnderecoId = 2,
                            Bairro = "Jardim Itália",
                            CEP = "88888888",
                            ClienteId = 2,
                            Logradouro = "Cuiaba-Alphaville",
                            Numero = "2424"
                        });
                });

            modelBuilder.Entity("SGPA.ApplicationCore.Entity.Grupo", b =>
                {
                    b.Property<int>("GrupoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(30)");

                    b.HasKey("GrupoId");

                    b.ToTable("Grupos");

                    b.HasData(
                        new
                        {
                            GrupoId = 1,
                            Descricao = "Sei la"
                        },
                        new
                        {
                            GrupoId = 2,
                            Descricao = "Eu Adoro"
                        });
                });

            modelBuilder.Entity("SGPA.ApplicationCore.Entity.Passagem", b =>
                {
                    b.Property<int>("PassagemId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId");

                    b.Property<DateTime>("DataEmissao");

                    b.Property<double>("Valor");

                    b.Property<int?>("VooId");

                    b.HasKey("PassagemId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("VooId");

                    b.ToTable("Passagens");

                    b.HasData(
                        new
                        {
                            PassagemId = 1,
                            ClienteId = 1,
                            DataEmissao = new DateTime(2018, 12, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            Valor = 100.0
                        },
                        new
                        {
                            PassagemId = 2,
                            ClienteId = 2,
                            DataEmissao = new DateTime(2018, 12, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            Valor = 500.0
                        });
                });

            modelBuilder.Entity("SGPA.ApplicationCore.Entity.PassagemAerea", b =>
                {
                    b.Property<int>("PassagemId");

                    b.Property<int>("GrupoId");

                    b.Property<int>("PassagemAereaId");

                    b.HasKey("PassagemId", "GrupoId");

                    b.HasIndex("GrupoId");

                    b.ToTable("PassagensAereas");
                });

            modelBuilder.Entity("SGPA.ApplicationCore.Entity.Voo", b =>
                {
                    b.Property<int>("VooId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Numero");

                    b.HasKey("VooId");

                    b.ToTable("Voos");

                    b.HasData(
                        new
                        {
                            VooId = 1,
                            Descricao = "Rio Janeiro",
                            Numero = 10
                        },
                        new
                        {
                            VooId = 2,
                            Descricao = "Sao Paulo",
                            Numero = 24
                        });
                });

            modelBuilder.Entity("SGPA.ApplicationCore.Entity.Endereco", b =>
                {
                    b.HasOne("SGPA.ApplicationCore.Entity.Cliente", "Cliente")
                        .WithOne("Enderecos")
                        .HasForeignKey("SGPA.ApplicationCore.Entity.Endereco", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGPA.ApplicationCore.Entity.Passagem", b =>
                {
                    b.HasOne("SGPA.ApplicationCore.Entity.Cliente", "Cliente")
                        .WithMany("Passagens")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SGPA.ApplicationCore.Entity.Voo")
                        .WithMany("Passagens")
                        .HasForeignKey("VooId");
                });

            modelBuilder.Entity("SGPA.ApplicationCore.Entity.PassagemAerea", b =>
                {
                    b.HasOne("SGPA.ApplicationCore.Entity.Grupo", "Grupo")
                        .WithMany("PassagensAerea")
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SGPA.ApplicationCore.Entity.Passagem", "Passagem")
                        .WithMany("PassagensAerea")
                        .HasForeignKey("PassagemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
